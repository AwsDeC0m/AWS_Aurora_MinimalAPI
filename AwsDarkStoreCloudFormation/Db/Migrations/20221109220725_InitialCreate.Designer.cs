// <auto-generated />
using System;
using AwsDarkStoreCloudFormation.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AwsDarkStoreCloudFormation.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221109220725_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DarkStoreCommonLib.Db.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp(0) without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OptionsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp(0) without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("DarkStoreCommonLib.Db.Entities.StoreOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp(0) without time zone");

                    b.Property<bool>("HasGroceries")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasHouseholdGoods")
                        .HasColumnType("boolean");

                    b.Property<int>("ParkingSize")
                        .HasColumnType("integer");

                    b.Property<float>("Square")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp(0) without time zone");

                    b.HasKey("Id");

                    b.ToTable("StoreOptions");
                });

            modelBuilder.Entity("DarkStoreCommonLib.Db.Entities.Store", b =>
                {
                    b.HasOne("DarkStoreCommonLib.Db.Entities.StoreOptions", "Options")
                        .WithMany()
                        .HasForeignKey("OptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
